# This pipeline validates changes in CEDAR.Core.Collector against CEDAR.GitHub.Collector product to ensure that the
# changes done in the core library does not cause regressions in the product.
# This is done by checking out both CEDAR.Core.Collector (from GitHub) and CEDAR.GitHub.Collector (from GitHub as well) repos
# and then reconstructing the right folder structure by moving Core.Collector inside GitHub.Collector. Finally, the
# pipeline builds and tests CEDAR.GitHub.Collector.

name: $(Year:yyyy).$(Month).$(DayOfMonth).$(Rev:r)

resources:
  repositories:
  - repository: CEDAR.GitHub.Collector
    type: github
    endpoint: microsoft/CEDAR
    name: microsoft/CEDAR.GitHub.Collector
    ref: main

trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:

- checkout: self
  path: s\CEDAR.Core.Collector

- checkout: CEDAR.GitHub.Collector
  path: s\CEDAR.GitHub.Collector

- powershell: |
   $submoduleDirectory = "$(System.DefaultWorkingDirectory)\CEDAR.GitHub.Collector\CEDAR.Core.Collector"
   Copy-Item "$(System.DefaultWorkingDirectory)\CEDAR.Core.Collector\*" -Destination $submoduleDirectory -Recurse
  displayName: 'Copy CEDAR.Core.Collector into CEDAR.GitHub.Collector as a submodule'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet'
  inputs:
    command: restore
    projects: 'CEDAR.GitHub.Collector\GitHub.Collectors.sln'
    feedsToUse: config
    nugetConfigPath: 'CEDAR.GitHub.Collector\NuGet.config'

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 3.0'
  inputs:
    version: 3.1.200
    installationPath: '$(Agent.ToolsDirectory)\dotnet'

- task: DotNetCoreCLI@2
  displayName: 'Build CEDAR.GitHub.Collector'
  inputs:
    projects: 'CEDAR.GitHub.Collector\GitHub.Collectors.sln'
    arguments: '-c Release --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Test CEDAR.GitHub.Collector'
  inputs:
    command: test
    projects: 'CEDAR.GitHub.Collector\GitHub.Collectors.sln'
    arguments: '--configuration $(buildConfiguration) --no-restore --collect "Code coverage"'

- task: ArchiveFiles@2
  displayName: 'Archive CEDAR.GitHub.Collector'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)\CEDAR.GitHub.Collector\GitHub.Collectors.Functions\bin\Release\netcoreapp3.1'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)\GitHub.Collectors.Functions$(Build.BuildId).zip'

- task: CopyFiles@2
  displayName: 'Copy Build output'
  inputs:
    SourceFolder: '$(Build.StagingDirectory)'
    TargetFolder: '$(build.ArtifactStagingDirectory)\output'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\output'
